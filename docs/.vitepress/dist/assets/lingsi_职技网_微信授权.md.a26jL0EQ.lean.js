import{_ as i,c as a,a2 as n,o as e}from"./chunks/framework.DN5Ma_nw.js";const c=JSON.parse('{"title":"微信授权","description":"","frontmatter":{"0":"t","1":"i","2":"t","3":"l","4":"e","5":" ","6":"微","7":"信","8":"授","9":"权"},"headers":[],"relativePath":"lingsi/职技网/微信授权.md","filePath":"project/lingsi/职技网/微信授权.md","lastUpdated":1733132188000}'),p={name:"lingsi/职技网/微信授权.md"};function l(t,s,h,k,d,o){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="微信授权" tabindex="-1">微信授权 <a class="header-anchor" href="#微信授权" aria-label="Permalink to &quot;微信授权&quot;">​</a></h1><p>职技网需要通过公众号为用户发送消息提醒，因此用到了微信网页授权。第一次尝试这个功能，在此记录从 0 开始的微信网页授权实现之路。</p><p>微信网页授权官网指路：<a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html" target="_blank" rel="noreferrer">微信网页开发/网页授权</a> .</p><h2 id="思路剖析" tabindex="-1">思路剖析 <a class="header-anchor" href="#思路剖析" aria-label="Permalink to &quot;思路剖析&quot;">​</a></h2><p>根据官方文档的说法，翻译成大白话就是：</p><ol><li><p>拿到需要发送消息提醒的公众号的 <code>AppId</code> 和授权后重定向的回调链接地址 <code>redirect_uri</code> 进行拼接。</p></li><li><p>根据文档的链接放置到对应的参数位置，<code>location.href</code> 路由跳转（地址分析见下方）。</p></li><li><p>跳转成功后路径上会有一个 <code>code</code> 值，获取到该 <code>code</code> 值调用后端的接口。</p></li><li><p>返回 <code>openId</code> 就算成功。如下所示：</p><p><img src="https://i.imgloc.com/2023/04/10/imt8nH.png" alt="imt8nH.png" loading="lazy"></p></li></ol><p>微信授权跳转地址示例如下所示：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx520c15f417810387&amp;redirect_uri=https%3A%2F%2Fchong.qq.com%2Fphp%2Findex.php%3Fd%3D%26c%3DwxAdapter%26m%3DmobileDeal%26showwxpaytitle%3D1%26vb2ctag%3D4_2030_5_1194_60&amp;response_type=code&amp;scope=snsapi_base&amp;state=123#wechat_redirect</span></span></code></pre></div><p>其中：</p><ul><li><code>appid</code> ：公众号的唯一标识（必填）</li><li><code>redirect_uri</code> ：授权后重定向的回调链接地址， 需要使用使用 <code>urlEncode</code> 对链接进行处理（必填，本地如何获取见下方《本地环境》）</li><li><code>response_type</code> ：固定写死为 <code>code</code> 即可（必填）</li><li><code>scope</code> ：有两种参数可选。<code>snsapi_base</code> （不弹出授权页面，直接跳转，只能获取用户 <code>openid</code> ）；<code>snsapi_userinfo</code> （弹出授权页面，可通过 openid 拿到昵称、性别、所在地。并且， 即使在未关注的情况下，只要用户授权，也能获取其信息，需要用户授权）（必填）</li><li><code>#wechat_redirect</code> ：固定写死，前面不需要用 <code>&amp;</code> 符号拼接（必填）</li></ul><h2 id="本地环境" tabindex="-1">本地环境 <a class="header-anchor" href="#本地环境" aria-label="Permalink to &quot;本地环境&quot;">​</a></h2><p>根据上方分析可得知我们需要传递的参数，其余为固定写死， <code>appId</code> 可通过登录微信公众平台获取，只有 <code>redirect_uri</code> 重定向地址需要特别注意。</p><p>本地环境中，前端页面访问的路径为 <code>http://192.168.0.20:8080</code> （即项目运行地址），但是这个是内网 IP 地址，外网无法访问，需要用到内网穿透，把内网映射到外网中，例如： <code>http://8jybbr.natappfree.cc</code> 映射到 <code>http://192.168.0.20:8080</code> 中。</p><h3 id="内网穿透" tabindex="-1">内网穿透 <a class="header-anchor" href="#内网穿透" aria-label="Permalink to &quot;内网穿透&quot;">​</a></h3><p>本项目使用的是 <code>natapp</code> 这款软件，官网地址：<a href="https://natapp.cn/" target="_blank" rel="noreferrer">natapp</a> 。下面介绍一下如何实现内网穿透（也可以阅读官方教程文档，指路：<a href="https://natapp.cn/article/natapp_newbie" target="_blank" rel="noreferrer">NATAPP1 分钟快速新手图文教程</a>）。</p><h4 id="注册实名" tabindex="-1">注册实名 <a class="header-anchor" href="#注册实名" aria-label="Permalink to &quot;注册实名&quot;">​</a></h4><p>没啥好讲的，注册账号，实名认证，绑定支付宝即可。</p><h4 id="购买隧道与使用隧道" tabindex="-1">购买隧道与使用隧道 <a class="header-anchor" href="#购买隧道与使用隧道" aria-label="Permalink to &quot;购买隧道与使用隧道&quot;">​</a></h4><ol><li><p>注册成功后登录，点击左侧购买隧道，选择免费隧道</p></li><li><p>修改名称、本地端口、隧道协议（本项目为 <code>Web</code> 协议，请根据自己的使用场景配合官方文档解释进行选择）</p><p><img src="https://i.imgloc.com/2023/04/10/imkNOP.png" alt="imkNOP.png" loading="lazy"></p></li><li><p>点击免费购买按钮购买隧道</p></li><li><p>点击左侧我的隧道，选择刚刚购买成功的隧道，点击配置按钮</p></li><li><p>修改本地地址为 <code>127.0.0.1</code> ，端口为项目运行端口，勾选本地 <code>Web</code> 管理地址</p><p><img src="https://i.imgloc.com/2023/04/10/imkEid.png" alt="imkEid.png" loading="lazy"></p></li><li><p>点击修改，保存修改后复制其 <code>autoToken</code></p></li><li><p>点击教程文档的 <a href="https://natapp.cn/article/config_ini" target="_blank" rel="noreferrer">《使用本地配置文件 config.ini》</a> ，下载 <code>config.ini</code> （我是 <code>windows</code> 版本，因此下载对应的版本</p><p><img src="https://i.imgloc.com/2023/04/10/imk61z.png" alt="imk61z.png" loading="lazy"></p></li><li><p>打开下载好的 <code>config.ini</code> 文件，把第 6 步复制的 <code>autoToken</code> 粘贴到对应位置（其余设置不变）</p></li><li><p>下载客户端，解压安装</p><blockquote><p>注意：</p><p>解压安装的 <code>natapp</code> 需要和 <code>config.ini</code> 处于同级目录下，否则无法运行。</p></blockquote></li><li><p>双击解压安装的 <code>natapp.exe</code> ，就能获取到内网穿透的地址</p><p><img src="https://i.imgloc.com/2023/04/10/imCITt.png" alt="imCITt.png" loading="lazy"></p><p><img src="https://i.imgloc.com/2023/04/10/imCETz.png" alt="imCETz.png" loading="lazy"></p></li></ol><h4 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h4><ol><li>把链接复制给项目经理做了某种操作（用于文件校验域名，没接触不清楚他具体做了啥），返回一串字符，新建一个 <code>txt</code> 记事本粘贴，放到项目的 <code>public</code> 文件夹下。</li><li>此时访问链接，会提示：<code>Invalid Host header</code> 无效的请求头，去到 <code>vue.config.js</code> ，新建一个 <code>devServer</code> 对象，设置 <code>disableHostCheck: true,</code> ，重新运行项目。</li><li>成功访问（第一次访问会慢，需要等待）</li></ol><h3 id="获取-code" tabindex="-1">获取 code <a class="header-anchor" href="#获取-code" aria-label="Permalink to &quot;获取 code&quot;">​</a></h3><p>实现内网穿透后接下来就能通过获取到的地址放到对应位置传参获取到 <code>code</code> 值。</p><blockquote><p>注意事项：</p><p><code>redirect_uri</code> 需要使用 <code>urlEncode</code> 对链接进行处理</p></blockquote><h3 id="代码" tabindex="-1">代码 <a class="header-anchor" href="#代码" aria-label="Permalink to &quot;代码&quot;">​</a></h3><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 微信授权登陆地址</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> WX_AUTH_URL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://open.weixin.qq.com/connect/oauth2/authorize?&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 重定向参数-固定写法</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> REDIRECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;#wechat_redirect&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      model: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        account: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        password: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        role: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        smsCode: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        code: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      params: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        appid: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wxbe0ffc4f85483b1e&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 公众号 APP ID</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        redirect_uri: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\${</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encodeURI</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://8jybbr.natappfree.cc/&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 授权后重定向的回调链接地址， 使用 urlEncode 对链接进行处理</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        response_type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 固定写法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        scope: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;snsapi_base&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// snsapi_base 静默授权获取 open id ；snsapi_userinfo 需要用户授权，获取详细信息</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // state:&#39;code&#39;, // a-zA-Z0-9的参数值，最多128字节</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  created</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 获取地址参数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> params</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URLSearchParams</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(location.search);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.model.code </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> params.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 访问地址</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> access_url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      WX_AUTH_URL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`\${</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URLSearchParams</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">params</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> REDIRECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 这些需要判断没有 code 情况拉起授权登陆，有就结束放在重复拉起授权登陆</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.model.code) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      location.href </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> access_url;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>部分代码详解：</p><ul><li><p><code>new URLSearchParams</code></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/URLSearchParams" target="_blank" rel="noreferrer"><strong><code>URLSearchParams</code></strong></a> 接口定义了一些实用的方法来处理 URL 的查询字符串，返回一个 <code>URLSearchParams</code> 对象。对象可以直接用在 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/for...of" target="_blank" rel="noreferrer"><code>for...of</code></a> 结构中。</p><p>其中，<code>URLSearchParams.get()</code> 可获取指定搜索参数的第一个值，如上方代码获取 <code>code</code> 值。</p></li><li><p><code>encodeURI</code></p><p><strong><code>encodeURI()</code></strong> 函数通过将特定字符的每个实例替换为一个、两个、三或四转义序列来对统一资源标识符 (URI) 进行编码 (该字符的 UTF-8 编码仅为四转义序列) 由两个 &quot;代理&quot; 字符组成)。</p><p>参数：一个完整的 URI。</p><p>返回值：一个新字符串，表示提供的字符串编码为统一资源标识符 (URI)。</p></li></ul><h2 id="线上环境" tabindex="-1">线上环境 <a class="header-anchor" href="#线上环境" aria-label="Permalink to &quot;线上环境&quot;">​</a></h2><p>本项目线上域名地址为 <code>http://www.zhijijob.com/client/#/</code> ，把 <code>/#/</code> 去掉。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  appid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wxbe0ffc4f85483b1e&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 公众号 APP ID</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  redirect_uri</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\${</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encodeURI</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://www.zhijijob.com/client&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 授权后重定向的回调链接地址， 请使用 urlEncode 对链接进行处理</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><p>打包部署，能够生效，即为成功。</p><h2 id="调试" tabindex="-1">调试 <a class="header-anchor" href="#调试" aria-label="Permalink to &quot;调试&quot;">​</a></h2><p>使用微信开发工具进行网页调试，选择公众号网页项目。</p><p><img src="https://i.imgloc.com/2023/04/10/imlQUa.png" alt="imlQUa.png" loading="lazy"></p><p>本地输入链接 <code>localhost:8080</code> 、在线输入在线域名地址，即可看到效果，返回相应的 <code>code</code> 。</p><p><img src="https://i.imgloc.com/2023/04/10/imlqok.png" alt="imlqok.png" loading="lazy"></p><blockquote><p>注意：</p><p>需要把自己添加为微信公众号的开发者才可以。</p><p><img src="https://i.imgloc.com/2023/04/10/imlLQb.png" alt="imlLQb.png" loading="lazy"></p></blockquote>`,38)]))}const E=i(p,[["render",l]]);export{c as __pageData,E as default};
