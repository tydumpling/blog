import{_ as a,c as t,a2 as o,o as d}from"./chunks/framework.DN5Ma_nw.js";const h=JSON.parse('{"title":"大小写规则检测","description":"","frontmatter":{},"headers":[],"relativePath":"Git/潜在的BUG/大小写规则.md","filePath":"learn/Git/潜在的BUG/大小写规则.md","lastUpdated":1733132188000}'),s={name:"Git/潜在的BUG/大小写规则.md"};function c(p,e,i,n,l,r){return d(),t("div",null,e[0]||(e[0]=[o('<h1 id="大小写规则检测" tabindex="-1">大小写规则检测 <a class="header-anchor" href="#大小写规则检测" aria-label="Permalink to &quot;大小写规则检测&quot;">​</a></h1><p>在 Git 中有一个虽然很小但很致命的问题：他对英文字母大小写检测默认是忽略的。这会造成什么后果呢？</p><p>​ 我们来看一个场景：同事A新建了一个文件夹 <code>components</code> ，在其中创建一个组件 <code>Upload.vue</code> ，其他页面都是以 <code>xxx/Upload.vue</code> 为路径。后面修改为小写字母 <code>upload.vue</code> ，而文件路径也做相应的修改。 ​ 本地环境运行没有问题，但是推送到远程服务器时由于 Git 忽略大小写，因此远程服务器还是 <code>Upload.vue</code> 文件，则路径找不到 <code>uoload.vue</code> 文件开始报错。</p><p>解决方法很简单，把忽略大小写的规则禁用即可，命令如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git config core.ignorecase false</span></span></code></pre></div><p>禁用之后可以发现能够检测到文件的变化并提交远程了。</p>',6)]))}const _=a(s,[["render",c]]);export{h as __pageData,_ as default};
