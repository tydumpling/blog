import{_ as e,c as a,a2 as i,o as t}from"./chunks/framework.DN5Ma_nw.js";const k=JSON.parse('{"title":"打包","description":"","frontmatter":{"0":"t","1":"i","2":"t","3":"l","4":"e","5":" ","6":"打","7":"包"},"headers":[],"relativePath":"vitePress/Build.md","filePath":"vitePress/Build.md","lastUpdated":1733132188000}'),p={name:"vitePress/Build.md"};function d(n,s,l,o,c,h){return t(),a("div",null,s[0]||(s[0]=[i('<h1 id="打包" tabindex="-1">打包 <a class="header-anchor" href="#打包" aria-label="Permalink to &quot;打包&quot;">​</a></h1><p>项目搭建成功后，接下来该打包了。项目打包的好处学习 <code>webpack</code> 的时候已经对比过了，这里不做过多赘述。</p><p><code>vitepress</code> 打包需要做一个前置步骤：在 <code>config.js</code> 文件中设置 <code>base</code> 打包基准路径，路径填啥取决于部署时仓库的名称是啥。</p><p>例如：我的仓库名称为 “daodao” ，则我的 <code>base</code> 参数如下：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">base</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/daodao/&#39;</span></span></code></pre></div><p>如果仓库名称为 <code>github用户名.github.io</code> 或者 <code>gitee用户名.gitee.io</code> ，则视为默认路径，斜杆即可。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">base</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/&#39;</span></span></code></pre></div><p>前置工作做好以后，运行打包命令打包项目。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:build</span></span></code></pre></div><p>一旦打包成功后，就可以通过运行 <code>yarn docs:serve</code> 命令来进行本地测试。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:serve</span></span></code></pre></div><p>可以看到效果即为成功。</p>',12)]))}const g=e(p,[["render",d]]);export{k as __pageData,g as default};
