import{_ as i,c as a,a2 as p,o as n}from"./chunks/framework.DN5Ma_nw.js";const o=JSON.parse('{"title":"自定义样式","description":"","frontmatter":{},"headers":[],"relativePath":"baidu/fokai/LED/style.md","filePath":"project/baidu/fokai/LED/style.md","lastUpdated":1733132188000}'),l={name:"baidu/fokai/LED/style.md"};function t(e,s,h,k,r,d){return n(),a("div",null,s[0]||(s[0]=[p(`<h1 id="自定义样式" tabindex="-1">自定义样式 <a class="header-anchor" href="#自定义样式" aria-label="Permalink to &quot;自定义样式&quot;">​</a></h1><p>地图默认样式是白色底，可以通过相应的 API 实现切换不同种类的样式。</p><p>根据 <a href="https://lbs.baidu.com/index.php?title=jspopularGL/guide/custom" target="_blank" rel="noreferrer">个性化地图</a> 文档可看出，可以通过两种方式实现效果：</p><ol><li><p>通过样式ID调用个性化地图样式</p><ol><li><p>进入地图开放平台控制台页面，在<a href="http://lbsyun.baidu.com/apiconsole/custommap" target="_blank" rel="noreferrer">我的地图</a>中，创建一个地图样式：</p><p><img src="https://pic.imgdb.cn/item/65fa5f259f345e8d0333630c.png" alt="样式" loading="lazy"></p></li><li><p>点击创建的地图样式，进入样式编辑器，根据需求自由编辑地图样式：</p><p><img src="https://pic.imgdb.cn/item/65fa5f559f345e8d033423c4.png" alt="编辑" loading="lazy"></p></li><li><p>完成编辑后，在我的地图或者编辑器中发布该地图样式，获取发布后生成的样式ID</p></li><li><p>在JavaScript API中应用地图样式</p><p>将第三步中获取的样式ID作为setMapStyleV2方法的参数。(注意：发布的styleID需要与ak为同一个用户)</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">map.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setMapStyleV2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({     </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  styleId: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;3d71dc5a4ce6222d3396801dee06622d&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div></li></ol></li><li><p>通过样式 JSON 文件调用样式</p><ol><li><p>在编辑界面复制 JSON 文件</p><p><img src="https://pic.imgdb.cn/item/65fa7d9a9f345e8d03bce80c.png" alt="json" loading="lazy"></p></li><li><p>在项目中粘贴，引入使用</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { onMounted, ref } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { storeToRefs } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;pinia&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> useMapStore </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@/store/index.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> styleJson </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@/assets/json/mapStyle.json&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取pinia仓库内的地图实例</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> storeToRefs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">useMapStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onMounted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    map.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BMapGL.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(container.value)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    map.value.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setMapStyleV2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ styleJson: styleJson }); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 地图自定义样式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></li></ol><p>通过以上两种方式都能实现地图样式自定义调整。</p></li></ol>`,4)]))}const g=i(l,[["render",t]]);export{o as __pageData,g as default};
