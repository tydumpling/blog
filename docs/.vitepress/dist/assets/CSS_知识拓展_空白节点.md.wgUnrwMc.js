import{_ as i,c as a,a2 as e,o as n}from"./chunks/framework.DN5Ma_nw.js";const r=JSON.parse('{"title":"空白节点","description":"","frontmatter":{},"headers":[],"relativePath":"CSS/知识拓展/空白节点.md","filePath":"learn/CSS/知识拓展/空白节点.md","lastUpdated":1733132188000}'),l={name:"CSS/知识拓展/空白节点.md"};function t(h,s,p,d,o,k){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="空白节点" tabindex="-1">空白节点 <a class="header-anchor" href="#空白节点" aria-label="Permalink to &quot;空白节点&quot;">​</a></h1><h2 id="场景重现" tabindex="-1">场景重现 <a class="header-anchor" href="#场景重现" aria-label="Permalink to &quot;场景重现&quot;">​</a></h2><p>在介绍空白节点之前，首先看一个案例。代码如下：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>此时打开页面是没有背景色的，因为没有内容把他撑开。如果给 <code>span</code> 添加内容，则会因为有内容高度把它撑开，显示红色的背景色。</p><p>现在给 <code>span</code> 修改为行内块元素，代码如下：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inline-block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>此时页面显示了红色空白，效果如下：</p><p><a href="https://imgse.com/i/pP58f5d" target="_blank" rel="noreferrer"><img src="https://z1.ax1x.com/2023/09/19/pP58f5d.png" alt="pP58f5d.png" loading="lazy"></a></p><p>就像一个空白的幽灵节点一样，把父盒子撑开。</p><h2 id="前置知识" tabindex="-1">前置知识 <a class="header-anchor" href="#前置知识" aria-label="Permalink to &quot;前置知识&quot;">​</a></h2><p>首先我们需要了解一个概念，叫做基线，在所有内联相关模型中，凡是涉及到垂直方向的排版或者对齐的，都离不开最最基本的基线（base-line），那么基线是怎么定义的呢？在维基百科中有这么一个示意图：</p><p><img src="https://pic4.zhimg.com/v2-18b575f052c9b170e9ff0acbac55913b_r.jpg" alt="tupian" loading="lazy"></p><p>根据图片中标示，字母 x 的下边缘（线）就是基线。</p><p>在 CSS 中有两个重要属性，<code>line-height</code>和<code>vertical-align</code>都与基线有关，<code>line-height</code>行高的定义就是两个基线之间的距离，<code>vertical-align</code>的默认值就<code>baseline</code>，也就是基线对齐。对于内联元素，我们要认识到，虽然<code>vertical-align</code>与<code>line-height</code>看不见，但实际上<strong>到处都是</strong>！</p><p>那么标签元素的基线如何确认呢？在 CSS2 的可视化格式模型文档中有这样一段话：</p><blockquote><p>The baseline of an ‘inline-block’ is the baseline of its last line box in the normal flow, unless it has either no in-flow line boxes or if its ‘overflow’ property has a computed value other than ‘visible’, in which case the baseline is the bottom margin edge.”</p></blockquote><p>也就是说：一个<code>inline-block</code>元素，如果里面没有<code>inline</code>内联元素，或者<code>overflow</code>不是<code>visible</code>，则该元素的基线就是其<code>margin</code>底边缘，否则，其基线就是元素里面最后一行内联元素的基线。</p><p>因此，当<code>&lt;span&gt;</code>中空白并且为<code>inline box</code>的时候，<code>div</code>中似乎依然有一个和类似 x 字符的空白节点，来撑起<code>line box</code>的高度。为了帮助我们理解，在这里我们可以把字符 x 看作为“幽灵空白节点”具像，它不占任何宽度，看不见也无法通过任何方式获取，但又似乎真实存在，它的大小会受<code>font-size</code>的影响。</p><h2 id="认识-幽灵空白节点" tabindex="-1">认识“幽灵空白节点” <a class="header-anchor" href="#认识-幽灵空白节点" aria-label="Permalink to &quot;认识“幽灵空白节点”&quot;">​</a></h2><p>在 HTML5 规范中有这样一句话：</p><blockquote><p>&quot;Each line box starts with a zero-width inline box with the element&#39;s font and line height properties. We call that imaginary box a &#39;strut&#39;.&quot; 每个行框盒子都以一个具有元素的字体和行高属性的零宽度行内框开始。我们称这个假想的盒子为&quot;支柱&quot;。</p></blockquote><p>在<strong>HTML5 文档声明</strong>中，内联元素的所有解析和渲染表现就如同每个行框盒子的前面有一个“空白节点”一样。这个“空白节点”永远透明，不占据任何宽度，看不见也无法通过脚本获取，就好像幽灵一样，但又确确实实地存在，表现如同文本节点一样，因此，在张鑫旭大佬的《CSS 世界》一书中根据特点，将其称之为“幽灵空白节点”，也就是官方规范中的“<code>strut</code>”。</p><h2 id="消除-幽灵空白节点-的影响" tabindex="-1">消除“幽灵空白节点”的影响 <a class="header-anchor" href="#消除-幽灵空白节点-的影响" aria-label="Permalink to &quot;消除“幽灵空白节点”的影响&quot;">​</a></h2><p>终于找到并认识了“幽灵空白节点”，那么对于这种无法获取却又真实影响我们样式的“节点”，我们应该如何消除它带来的影响？</p><ul><li>1、让<code>vertical-align</code>失效：<code>vertical-align</code>属性对于块级元素是无感的，因此我们只需要为元素设置<code>dispaly</code>为<code>block</code>即可;</li><li>2、修改<code>vertical-align</code>属性值：修改其默认值<code>baseline</code>值为其他属性值，使其不再相对基线对齐;</li><li>3、修改<code>line-height</code>的值：上面我们说过<code>line-height</code>的定义是两基线之间的距离，因此在上面例子中，图片下面的空隙，实际上是“幽灵空白节点”计算后的行高值和基线的距离，因此，只要<code>line-height</code>足够小，便可以消除图片下面的空隙。（注意这里是要在<code>div</code>上设置<code>line-heght</code>，然后让<code>div</code>的<code>inline boxes</code>继承<code>line-height</code>属性</li></ul>`,26)]))}const E=i(l,[["render",t]]);export{r as __pageData,E as default};
